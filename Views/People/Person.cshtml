@model PeopleViewModel

@{
    ViewData["Title"] = Model.Name;
    var returnToPage = this.Context.Request.Query["returnToPage"].ToString() ?? "1";
}

<div class="d-flex flex-row justify-content-between align-items-end">
    <h1 class="m-0">@Model.Name</h1>
    <a asp-action="Index" asp-route-page="@returnToPage">Back to Index</a>
</div>
<hr />
<div class="row m-0">
    @await Component.InvokeAsync("ImageDisplay", new { query = Model.Name })
    <div class="p-2 col-8">
        <section class="item p-4 text-center h-100">
            <h3>Person Details</h3>
            <hr />
            <div class="row m-0 pt-3 justify-content-between">
                <div class="col-3 pb-2">
                    <h5>Name</h5>
                    <p>@Model.Name</p>
                </div>
                <div class="col-3 pb-2">
                    <h5>Birth Year</h5>
                    <p>@Model.BirthYear</p>
                </div>
                <div class="col-3 pb-2">
                    <h5>Height</h5>
                    <p>@Model.Height</p>
                </div>
                <div class="col-3 pb-2">
                    <h5>Mass</h5>
                    <p>@Model.Mass</p>
                </div>
                <div class="col-3 pb-2">
                    <h5>Gender</h5>
                    <p>@Model.Gender</p>
                </div>
                <div class="col-3 pb-2">
                    <h5>Hair Color</h5>
                    <p>@Model.HairColor</p>
                </div>
                <div class="col-3 pb-2">
                    <h5>Eye Color</h5>
                    <p>@Model.EyeColor</p>
                </div>
                <div class="col-3 pb-2">
                    <h5>Skin Color</h5>
                    <p>@Model.SkinColor</p>
                </div>
            </div>
        </section>
    </div>
</div>

<div class="row m-0 align-items-stretch">
    @if (Model.Vehicles.Length > 0)
    {
        @await Component.InvokeAsync("ListDisplay",
    new { title = "Vehicles", urls = Model.Vehicles, controller = "vehicles"})
    }

    @if (Model.Species.Length > 0)
    {
        @await Component.InvokeAsync("ListDisplay",
    new { title = "Species", urls = Model.Species, controller = "species" })
    }

    @if (Model.Starships.Length > 0)
    {
        @await Component.InvokeAsync("ListDisplay",
    new { title = "Starships", urls = Model.Starships, controller = "starships" })
    }
</div>